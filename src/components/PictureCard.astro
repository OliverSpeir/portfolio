---
export interface Props {
	title: string;
	body: string;
	href: string;
	src: string;
	icons: string[];
}

const { href, title, body, src, icons} = Astro.props;
---

<li class="picture-card">
	<a href={href} target="_blank">
		<h2>
			{title}
		</h2>
        <img src={src}/>
		<p>
			{body}
		</p>
		<div class="icons">
			<ul class="icons-grid">
				{icons.map(icon => (
					<li class="icon-item">
			  		<img src={`public/${icon}.svg`} alt={icon} />
					</li>
				))}
			</ul>
		</div>
	</a>
</li>
<style>
	img {
		width: 100%;
	}
	.picture-card {
		width:30vw;
		list-style: none;
		display: flex;
		padding: 0.25rem;
		background-color: var(--accent-color);
		background-image: none;
		background-size: 400%;
		border-radius: 0.6rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px var(--card-shadow), 0 2px 4px -2px var(--card-shadow);
	}
	.picture-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: .5vw;
		border-radius: 0.35rem;
		color: var(--text-color);
		background-color: var(--card-color);
		opacity: 0.8;
	}
	h2 {
		text-align: center;
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: var(--text-color);
	}
	.icons {
		width:100%;
		height:auto;
	}
	ul.icons-grid {
  		display: grid;
  		grid-template-columns: repeat(4, 1fr);
  		gap: 1rem; 
	}
	li.icon-item {
  		list-style: none;
	}
	.picture-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--hover-accent-gradient);
	}
	.picture-card:is(:hover, :focus-within) h2 {
		color: var(--hover-accent);
	}
</style>
