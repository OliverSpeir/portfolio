---
import "@assets/styles/posts.css";
import { getCollection } from "astro:content";
import Layout from "@layouts/PageLayout.astro";
import "@assets/styles/remark-callout-directives.css";
import ThemeButton from "@components/ThemeButton.astro";
export const getStaticPaths = async () => {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
};
const { post } = Astro.props;
const {
	data: { title, description },
} = post;
const { Content, remarkPluginFrontmatter, headings } = await post.render();
const { lastModified } = remarkPluginFrontmatter;
const lastModifiedDate = new Date(lastModified);
const lastModifiedFallback = lastModifiedDate.toLocaleString("en-US", {
	month: "short",
	year: "numeric",
});

import TOC from "@components/TOC-WIP.astro";
---

<Layout {title} {description} {post}>
	<div class="flex items-center justify-between">
		<div class="flex items-center">
			<ThemeButton />
			<nav><a href="/">Homepage</a> <a href="/garden/">Garden</a></nav>
		</div>
		<aside class="flex flex-col text-sm sm:mr-2">
			<span>Updated: <span id="modifiedAgo">{lastModifiedFallback}</span> </span>
			<span>
				Published: {
					new Date(remarkPluginFrontmatter.date).toLocaleString("en-US", {
						month: "short",
						year: "numeric",
					})
				}
			</span>
		</aside>
	</div>

	<script is:inline data-last-modified={lastModifiedDate}>
		(() => {
			const lastModified = new Date(document.currentScript.getAttribute("data-last-modified"));
			const now = new Date();
			const monthsAgo =
				(now.getFullYear() - lastModified.getFullYear()) * 12 +
				now.getMonth() -
				lastModified.getMonth();

			let textContent;
			if (monthsAgo === 0) {
				textContent = "This month";
			} else if (monthsAgo === 1) {
				textContent = "Last month";
			} else if (monthsAgo > 12) {
				textContent = lastModified.toLocaleString("en-US", { month: "short", year: "numeric" });
			} else {
				textContent = `${monthsAgo} months ago`;
			}

			document.getElementById("modifiedAgo").textContent = textContent;
		})();
	</script>

	<article class="mx-auto mt-2 flex max-w-[34rem] flex-col sm:mt-0">
		<Content />
	</article>
</Layout>
