---
import "@assets/styles/posts.css";
import { getCollection } from "astro:content";
import Layout from "@layouts/PageLayout.astro";
import "@assets/styles/remark-callout-directives.css";
import ThemeButton from "@components/ThemeButton.astro";
import PostHeader from "@components/PostHeader.astro";
export const getStaticPaths = async () => {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
};
const { post } = Astro.props;
const {
	data: { title, description, date, header },
} = post;
const { Content, remarkPluginFrontmatter, headings } = await post.render();
const { lastModified, minutesRead } = remarkPluginFrontmatter;

import TOC from "@components/TOC.astro";
---

<Layout {title} {description} {post}>
	<header>
		<div class="flex items-center justify-between">
			<div class="flex items-center">
				<ThemeButton />
				<nav><a href="/">Homepage</a> <a href="/garden/">Garden</a></nav>
			</div>
		</div>
	</header>
	<script>
		import { VisibleOnScrollUp } from "../../webComponents/visibleOnScrollUp";
		import { FlyoutMenu } from "../../webComponents/mobileMenu";
		import { MobileTOC } from "src/webComponents/mobileToc";
		customElements.define("mobile-toc", MobileTOC);
		customElements.define("flyout-menu", FlyoutMenu);
		customElements.define("visible-on-scroll-up", VisibleOnScrollUp);

		let shouldAdd = true;
		document.addEventListener("astro:before-swap", (e) => {
			e.to.pathname.startsWith("/garden/") && e.to.pathname.length > "/garden/".length
				? (shouldAdd = true)
				: (shouldAdd = false);
		});
		window.addEventListener("scroll", () => {
			if (shouldAdd) {
				const el = document.createElement("visible-on-scroll-up");
				document.body.appendChild(el);
				shouldAdd = false;
			}
		});
	</script>
	<article class="mx-auto px-2 flex max-w-[36rem] flex-col">
		<PostHeader {title} {lastModified} {date} {minutesRead} {header} />
		<TOC {headings} />
		<Content />
	</article>
</Layout>
